# This is will automatically deploy images to the github docker registry and if the
# commit message contains [DEPLOY] then it will start training on the machine

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ deploys ]
  pull_request:
    branches: [ deploys ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validating-yaml-files:
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1

    - name: Install pykwalify
      run: |
        pip3 install pykwalify PyYAML

    - name: General Config Validation
      run: |
        cd Training/tests
        python3 config_test.py

    - name: Discriminator Layout Validation
      run: |
        cd Training/tests
        python3 discriminator_test.py

    - name: Generator Layout Validation
      run: |
        cd Training/tests
        python3 generator_test.py

  deploying-latest:
      runs-on: [ubuntu-latest]
      steps:
      - name: Deploying to github registry
        run: |
          cat ~/GH_TOKEN.txt | docker login docker.pkg.github.com -u enricozammitlon --password-stdin
          docker build --target runner --cache-from docker.pkg.github.com/enricozammitlon/gan4ds/argan:runner --pull -t docker.pkg.github.com/enricozammitlon/gan4ds/argan:runner .
          docker push docker.pkg.github.com/enricozammitlon/gan4ds/argan:runner

  begin-training:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[DEPLOY]')"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checking into Repository
      uses: actions/checkout@v2
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Started the job
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script_stop: true
        script: |
          cd /${{ secrets.HOST }}-data1/${{ secrets.USERNAME }}/
          singularity pull docker://docker.pkg.github.com/enricozammitlon/gan4ds/argan:runner
          nohup singularity run --nv docker://docker.pkg.github.com/enricozammitlon/gan4ds/argan:runner
